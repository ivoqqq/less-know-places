{"remainingRequest":"E:\\code\\VueJS\\roads\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\VueJS\\roads\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\code\\VueJS\\roads\\src\\components\\Services\\roadsService.js","dependencies":[{"path":"E:\\code\\VueJS\\roads\\src\\components\\Services\\roadsService.js","mtime":1610270024652},{"path":"E:\\code\\VueJS\\roads\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\VueJS\\roads\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\code\\VueJS\\roads\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICogYXMgZmlyZWJhc2UgZnJvbSAiZmlyZWJhc2UiOwppbXBvcnQgcm91dGVyIGZyb20gIi4uLy4uL3JvdXRlciI7CmV4cG9ydCB2YXIgcm9hZFNlcnZpY2UgPSB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJvYWQ6IHsKICAgICAgICBpZDogZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLnVpZCwKICAgICAgICBzdGFydHBvaW50OiAiIiwKICAgICAgICBzdGFydGltYWdlOiAiIiwKICAgICAgICBlbmRwb2ludDogIiIsCiAgICAgICAgZW5kaW1hZ2U6ICIiLAogICAgICAgIGV4cGVjdGF0aW9uczogIiIsCiAgICAgICAgdXNlcm5hbWU6IGZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlci5kaXNwbGF5TmFtZQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlRGF0YTogZnVuY3Rpb24gY3JlYXRlRGF0YSgpIHsKICAgICAgZmlyZWJhc2UuZmlyZXN0b3JlKCkuY29sbGVjdGlvbigicm9hZHMiKS5hZGQodGhpcy5yb2FkKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICByb3V0ZXIucHVzaCgiL2hpdC10aGUtcm9hZCIpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBhbGVydCgiRXJyb3IgYWRkaW5nIGRvY3VtZW50OiAiLCBlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIHNldERhdGE6IGZ1bmN0aW9uIHNldERhdGEoKSB7CiAgICAgIGZpcmViYXNlLmZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oInJvYWRzIikuZG9jKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkuc2V0KHRoaXMucm9hZCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gcm91dGVyLnB1c2goeyBuYW1lOiAiRGV0YWlscyIsIHBhcmFtczogeyBpZDogdGhpcy4kcm91dGUucGFyYW1zLmlkIH0gfSk7CiAgICAgICAgcm91dGVyLnB1c2goIi9oaXQtdGhlLXJvYWQiKTsKICAgICAgfSk7CiAgICB9LAogICAgZGVsRGF0YTogZnVuY3Rpb24gZGVsRGF0YShpZCkgewogICAgICBmaXJlYmFzZS5maXJlc3RvcmUoKS5jb2xsZWN0aW9uKCJyb2FkcyIpLmRvYyhpZCkuZGVsZXRlKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcm91dGVyLnB1c2goIi9oaXQtdGhlLXJvYWQiKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGZpcmViYXNlLmZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oInJvYWRzIikuZG9jKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkuZ2V0KCkudGhlbihmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgX3RoaXMuZG9jSUQgPSBkb2MuaWQ7CiAgICAgICAgX3RoaXMucm9hZCA9IGRvYy5kYXRhKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFF1ZXJ5RGF0YTogZnVuY3Rpb24gZ2V0UXVlcnlEYXRhKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGZpcmViYXNlLmZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oInJvYWRzIikuZ2V0KCkudGhlbihmdW5jdGlvbiAocXVlcnlTbmFwc2hvdCkgewogICAgICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICBfdGhpczIucm9hZHMucHVzaCh7CiAgICAgICAgICAgIGRvY0lEOiBkb2MuaWQsCiAgICAgICAgICAgIHVzZXJJRDogZG9jLmRhdGEoKS5pZCwKICAgICAgICAgICAgdXNlcm5hbWU6IGRvYy5kYXRhKCkudXNlcm5hbWUsCiAgICAgICAgICAgIHN0YXJ0cG9pbnQ6IGRvYy5kYXRhKCkuc3RhcnRwb2ludCwKICAgICAgICAgICAgZW5kcG9pbnQ6IGRvYy5kYXRhKCkuZW5kcG9pbnQsCiAgICAgICAgICAgIGV4cGVjdGF0aW9uczogZG9jLmRhdGEoKS5leHBlY3RhdGlvbnMsCiAgICAgICAgICAgIHN0YXJ0aW1hZ2U6IGRvYy5kYXRhKCkuc3RhcnRpbWFnZSwKICAgICAgICAgICAgZW5kaW1hZ2U6IGRvYy5kYXRhKCkuZW5kaW1hZ2UKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRRdWVyeURhdGFQcm9maWxlOiBmdW5jdGlvbiBnZXRRdWVyeURhdGFQcm9maWxlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGZpcmViYXNlLmZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oInJvYWRzIikuZ2V0KCkudGhlbihmdW5jdGlvbiAocXVlcnlTbmFwc2hvdCkgewogICAgICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICBpZiAoZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLnVpZCA9PT0gZG9jLmRhdGEoKS5pZCkgewogICAgICAgICAgICBfdGhpczMucm9hZHMucHVzaCh7CiAgICAgICAgICAgICAgZG9jSUQ6IGRvYy5pZCwKICAgICAgICAgICAgICB1c2VySUQ6IGRvYy5kYXRhKCkuaWQsCiAgICAgICAgICAgICAgdXNlcm5hbWU6IGRvYy5kYXRhKCkudXNlcm5hbWUsCiAgICAgICAgICAgICAgc3RhcnRwb2ludDogZG9jLmRhdGEoKS5zdGFydHBvaW50LAogICAgICAgICAgICAgIGVuZHBvaW50OiBkb2MuZGF0YSgpLmVuZHBvaW50LAogICAgICAgICAgICAgIGV4cGVjdGF0aW9uczogZG9jLmRhdGEoKS5leHBlY3RhdGlvbnMsCiAgICAgICAgICAgICAgc3RhcnRpbWFnZTogZG9jLmRhdGEoKS5zdGFydGltYWdlLAogICAgICAgICAgICAgIGVuZGltYWdlOiBkb2MuZGF0YSgpLmVuZGltYWdlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["E:/code/VueJS/roads/src/components/Services/roadsService.js"],"names":["firebase","router","roadService","data","road","id","auth","currentUser","uid","startpoint","startimage","endpoint","endimage","expectations","username","displayName","methods","createData","firestore","collection","add","then","push","catch","error","alert","setData","doc","$route","params","set","delData","delete","getData","get","docID","getQueryData","querySnapshot","forEach","roads","userID","getQueryDataProfile"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase\";\r\nimport router from \"../../router\"\r\nexport let roadService = {\r\n    data() {\r\n        return {\r\n            road: {\r\n                id: firebase.auth().currentUser.uid,\r\n                startpoint: \"\",\r\n                startimage: \"\",\r\n                endpoint: \"\",\r\n                endimage: \"\",\r\n                expectations: \"\",\r\n                username: firebase.auth().currentUser.displayName\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        createData() {\r\n            firebase\r\n                .firestore()\r\n                .collection(\"roads\")\r\n                .add(this.road)\r\n                .then(() => {\r\n                    router.push(\"/hit-the-road\")\r\n                })\r\n                .catch(error => {\r\n                    alert(\"Error adding document: \", error);\r\n                });\r\n        },\r\n        setData() {\r\n            firebase\r\n                .firestore()\r\n                .collection(\"roads\")\r\n                .doc(this.$route.params.id)\r\n                .set(this.road)\r\n                .then(() => {\r\n                    // router.push({ name: \"Details\", params: { id: this.$route.params.id } });\r\n                    router.push(\"/hit-the-road\");\r\n                })\r\n        },\r\n        delData(id) {\r\n            firebase\r\n                .firestore()\r\n                .collection(\"roads\")\r\n                .doc(id)\r\n                .delete()\r\n                .then(() => {\r\n                    router.push(\"/hit-the-road\");\r\n                });\r\n        },\r\n        getData() {\r\n            firebase\r\n                .firestore()\r\n                .collection(\"roads\")\r\n                .doc(this.$route.params.id)\r\n                .get()\r\n                .then(doc => {\r\n                    this.docID = doc.id;\r\n                    this.road = doc.data();\r\n                });\r\n        },\r\n        getQueryData() {\r\n            firebase\r\n                .firestore()\r\n                .collection(\"roads\")\r\n                .get()\r\n                .then(querySnapshot => {\r\n                    querySnapshot.forEach(doc => {\r\n                        this.roads.push({\r\n                            docID: doc.id,\r\n                            userID: doc.data().id,\r\n                            username: doc.data().username,\r\n                            startpoint: doc.data().startpoint,\r\n                            endpoint: doc.data().endpoint,\r\n                            expectations: doc.data().expectations,\r\n                            startimage: doc.data().startimage,\r\n                            endimage: doc.data().endimage\r\n                        });\r\n                    });\r\n                });\r\n        },\r\n        getQueryDataProfile(){\r\n            firebase\r\n            .firestore()\r\n            .collection(\"roads\")\r\n            .get()\r\n            .then(querySnapshot => {\r\n                querySnapshot.forEach(doc => {\r\n          if (firebase.auth().currentUser.uid === doc.data().id) {\r\n\r\n                    this.roads.push({\r\n                        docID: doc.id,\r\n                        userID: doc.data().id,\r\n                        username: doc.data().username,\r\n                        startpoint: doc.data().startpoint,\r\n                        endpoint: doc.data().endpoint,\r\n                        expectations: doc.data().expectations,\r\n                        startimage: doc.data().startimage,\r\n                        endimage: doc.data().endimage\r\n                    });\r\n                }\r\n                });\r\n            });\r\n        }\r\n    },\r\n}"]}]}